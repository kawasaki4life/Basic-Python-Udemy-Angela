alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

def caesar(start_text, shift_amount, cipher_direction):
  end_text = ""
  if cipher_direction == "decode":
    shift_amount *= -1
  for char in start_text:
  #This part in the loop differentiates if the character is part of the alphabet or not and it does not encrypt it
    if char in alphabet:
      position = alphabet.index(char)
      new_position = position + shift_amount
      end_text += alphabet[new_position]

    if char not in alphabet:
      end_text += char
    
  print(f"Here's the {cipher_direction}d result: {end_text}")

from art import logo
print(logo)


Revelation = False
while not Revelation:
  
  direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
  text = input("Type your message:\n").lower()
  shift = int(input("Type the shift number:\n"))
#Modulo grabs the remainder so the result is always a number between 0-26
  shift = shift%26

  caesar(start_text=text,shift_amount=shift,cipher_direction=direction) 
  replay=input("Do you want to go again? type yes or no? ").lower()
  if replay == ("yes"):
    Revelation == False
  if replay == ("no"):
    Revelation == True
  else:
    while replay != ("yes" and "no"):
      replay==input("Do you want to go again? type yes or no? ").lower()
    
  
